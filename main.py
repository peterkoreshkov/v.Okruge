import json, datetime, pprint, aiogram, asyncio, re, locale
import fetch_database as fetch, markups as nav
from datetime import datetime, timedelta, date, time
from aiogram import Bot, types, Dispatcher, Router, F
from aiogram.enums import ParseMode
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.client.default import DefaultBotProperties

#from aiogram.utils import executor
#from aiogram.contrib.fsm_storage.memory import MemoryStorage

#--------------–ê–†–•–ò–í----------------------

#from geopy.distance import great_circle
#from aiogram.dispatcher import Dispatcher
#from aiogram.dispatcher import FSMContext

#original token
#TOKEN = '5574605767:AAE2Gs61nr-M5YxjRoOxbCu1HY2Eu7AWqb0'
#url_get_events1 = 'https://quintadb.ru/apps/czW6pcM8jlWPy3W5VcLCkm/dtypes/entity/dcOmkhWQPoW4XNcCkJdb9U.json?rest_api_key=cqiNPXW4vcKOkRW6eGB8od&fetch_all=true&per_page=1000'
#URL_GET_ORGS = 'https://quintadb.ru/apps/czW6pcM8jlWPy3W5VcLCkm/dtypes/entity/ddUfldGKrcrikNkCkxdCk4.json?rest_api_key=cqiNPXW4vcKOkRW6eGB8od&fetch_all=true&per_page=1000'
#KEY = '4o4gqatnkrvkd6l575nd62vjs'


#-------------------------------------------------------------
#-----------------------–ó–ê–ü–£–°–ö –ë–û–¢–ê---------------------------

#–¢–û–ö–ï–ù –û–¢ –ù–ê–°–¢–û–Ø–©–ï–ì–û –ö–ê–ù–ê–õ–ê:
#TOKEN = '7608059262:AAGEE1CHS_5Usw0DXnFqwwq1wnrBJyz9rUI'

#–¢–æ–∫–µ–Ω —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞ –ü–µ—Ç—è:
TOKEN = '8184756910:AAHrjvfgZChQWajy7VlpBt7hMIJQuRgSSfE'

bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()
router = Router()
locale.setlocale(locale.LC_ALL, '')



KEY = 'cqiNPXW4vcKOkRW6eGB8od'

CHANNEL_NAME = ' –≤.–û–∫—Ä—É–≥–µ | –ü—Å–∫–æ–≤ - –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ —Ä—è–¥–æ–º.'
BOT_NAME = '–≤.–û–∫—Ä—É–≥–µ –ü—Å–∫–æ–≤ | –ê—Ñ–∏—à–∞-–±–æ—Ç'
BOT_NAME_SIMPLE = '–≤.–û–∫—Ä—É–≥–µ –ü—Å–∫–æ–≤'
CITY_NAME = '–ü—Å–∫–æ–≤'
CITY_NAME_pr_padezh = '–ü—Å–∫–æ–≤–µ'
CHANNEL_LINK = "https://t.me/vokruge_pskov"
BOT_LINK = "https://t.me/vokruge_pskov_bot"
SUPPORT_LINK = "https://t.me/vOkruge_support_bot"
TELEGRAPH_LINK = "https://telegra.ph/Kak-najti-interesnoe-meropriyatie-11-17-2"
NOTSUB_MESSAGE = str('–î–æ—Ä–æ–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º, –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª\n\n' + '<a href="' + CHANNEL_LINK + '">' + CHANNEL_NAME + '</a>' + '\n\n–ü–æ–¥–ø–∏—Å–∞–≤—à–∏—Å—å, –≤—ã –æ—Ç–∫—Ä–æ–µ—Ç–µ —Å–µ–±–µ –¥–æ—Å—Ç—É–ø –∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –æ–±–∑–æ—Ä–∞–º –∏ –¥–∞–π–∂–¥–µ—Å—Ç–∞–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –≥–æ—Ä–æ–¥–∞.')
main_menu_text = str(f'–≠—Ç–æ –±–æ—Ç <b>{BOT_NAME_SIMPLE}</b>\n\n–Ø –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ —Å–æ–±—ã—Ç–∏—è –Ω–∞ –±–ª–∏–∂–∞–π—à—É—é –Ω–µ–¥–µ–ª—é.' + f'\n\n‚ú®–í –º–æ–µ–π –±–∞–∑–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –¥–µ—Å—è—Ç–∫–æ–≤ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Å —Å–∞–º—ã–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏ –≥–æ—Ä–æ–¥–∞ –∏ –æ–±–ª–∞—Å—Ç–∏. –ü–æ–¥–±–æ—Ä–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.\n\nüí∏ –£–∑–Ω–∞–≤–∞–π—Ç–µ –æ –≤—ã–≥–æ–¥–Ω—ã—Ö –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è—Ö –≤ {CITY_NAME_pr_padezh} —Å –Ω–∞—à–µ–π –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π "–ê–∫—Ü–∏–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"' + '\n\n<a href="' + CHANNEL_LINK + '">' + CHANNEL_NAME + '</a>'  + '\n\nüìñ ' + '<a href="' + TELEGRAPH_LINK + '">' + "–ß—Ç–æ —Ç–∞–∫–æ–µ ¬´–≤.–û–∫—Ä—É–≥–µ - –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ —Ä—è–¥–æ–º¬ª?" + '</a>')
WELCOME_PHOTO = "https://postimg.cc/HcS8cSPL"


print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')
with open("users_logs.txt", "a") as file_data_users:
    cur_time = datetime.now() + timedelta(hours=3)
    logtime = cur_time.strftime("%H:%M:%S")
    file_data_users.write('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω ' + datetime.now().strftime("%d.%m.%y %H:%M:%S") + '\n')
global user_settings_dict
events_day = 0
#user_pos = (55.75583156779735, 37.61764840796227)
#combined_message = str(' ')
#var_user_latitude_int = float(0.0)
#var_user_longitude_int = float(0.0)

url_get_events = 'https://quintadb.ru/apps/ddP8ovW7PhWRFcS8oVfgfN/dtypes/entity/dcGaNdKcnkaykiW5JdUurN.json?rest_api_key=areK7dQ8ngb4khW5xcTmoD&fetch_all=true&per_page=1000'
url_get_offers = "https://quintadb.ru/apps/ddP8ovW7PhWRFcS8oVfgfN/dtypes/entity/ddPutcICjcWRmFlGPLW5rr.json?rest_api_key=areK7dQ8ngb4khW5xcTmoD&amp;view="
# –ü–ï–†–ï–ú–ï–ù–ù–´–ï –ö–õ–Æ–ß–ï–ô –ë–ê–ó–´ –î–ê–ù–ù–´–• –ú–ï–†–û–ü–†–ò–Ø–¢–ò–ô
event_name = 'cHW4tdPmjcaz3dRXhcR3eq'
event_ticketlink = 'bHW68ymmndkyo1WONdRczS'
event_mainlink = 'ddJmoemgvdSykgWPzSzCol'
event_start_time = 'b7W43dJ8npWPfLWR5mWQng'
event_end_time = 'adW4GCW5vfW4xdLumWWQ1E'
mod_check = 'dcTSoZiv1mW6mjcSoGCSk9'
event_price = 'aeW73dU8nhWPqLW6WvW4Tx'
event_type = 'bAEImNjmjoWPDrg0pcSmkv'
event_desc = 'bNWOxdHH1dJOoPW5ZdRmkJ'
event_age = 'c0WR1IWRrpcOk8WOBdKSkW'
event_category = 'ddNuKnW71pWPaUp8oQpmoh'
event_org = 'ddO8kQtdDcTjtcVGqCt8kq'
event_lat = 'bce8oTWQfbWRVcKSk0W5CE'
event_long = 'dcN8oLoCjoWRqonsBcSCos'
event_orglink = 'ddRSkgvc1fWQ8oD8o7WRHu'
event_pay_type = 'ciymodeKHcHkb2sSk7WQ8u'
event_add_type = 'cEyWtdMWzdWOjju3C_iSo3'
event_google = 'cuiSkhW5rid4o6W4KCCqfx'
event_set_google = 'bWW5xcHXrftk3cOCoJWRui'
event_yandex = "cipHhcHmnbW6HEWPBcQmoc"
event_set_yandex = "dcRCk2oxPcH4kuBmoIumks"
event_set_lat = 'dcTuRcO15bb4o4EeRcUCoy'
event_set_long = 'bsW71rWPzoWQGJzmkVWPWw'
event_phone = "bVzaxdUmnaWR5DW5ZcUmkr"
event_photo = 'cwgmoxoavcW6SJzehdV8o6'
paginate_end_photo_old = "https://static.tildacdn.com/tild3866-3732-4935-b261-636634306263/events_final.jpg"
paginate_end_photo = "https://i.postimg.cc/wTHRYDSc/events-final.jpg"
#---------- –ü–ï–†–ï–ú–ï–ù–ù–´–ï –ë–ê–ó–´ –î–ê–ù–ù–´–• –ê–ö–¶–ò–ô--------------
offer_category = "amW6idW7revykGDCkbW5qv"
offer_desc = "crFfqzW7PfWRXNvWlcHLrz"
offer_startdate = "b0dmoFx8nfWQ3dV8o2WPHX"
offer_enddate = "avW5OrWQLfniomW6BcSv06"
offer_orgname = "coW4tcGmnkW6S-FsVdRcfz"
offer_location_google = "cXWOBcNCjgW6HMW4BdL8ka"
offer_location_yandex = "ddGYOjW6zcGQXbWQbWWPjF"
offer_link = "cAjmoDWPjlaz3dKK7dMmox"
offer_photo = "bYW7ddI8jfrRlcKYizWQWH_original"

# –ó–ê–ü–ò–°–¨ –õ–û–ì–û–í –í –§–ê–ô–õ
def file_log(logtext):
    with open("users_logs.txt", mode="a") as file_data_users:
        cur_time = datetime.now() + timedelta(hours=3)
        logtime = cur_time.strftime("%H:%M:%S")
        file_data_users.write(logtime + ' ' + logtext + '\n')

# –£–ß–ï–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –í –§–ê–ô–õ
def file_users(username):
    users = open('users.txt', mode='r+', encoding='utf-8')
    readingfile = users.readlines()
    isinlist = 0
    for line in readingfile:
        if username+'\n' == line:
            isinlist = 1
            break
    if isinlist == 0:
        users.write(username + "\n")
    users.close()

# –°–û–°–¢–û–Ø–ù–ò–Ø –ò –ù–ê–°–¢–†–û–ô–ö–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
class user_settings(StatesGroup):
    event_category = State()
    event_day = State()
    body = State()
    part = State()
    photos = State()
    events_counter = State()
    stats_counter = State()
    offers_category = State()
    offers_type = State()

# –§–£–ù–ö–¶–ò–Ø –í–´–ó–û–í–ê –í–†–ï–ú–ï–ù–ò –°–û –°–ú–ï–©–ï–ù–ò–ï–ú
async def timeadjust():
    adjust_time = datetime.today() + timedelta(hours=3)
    final_date_str = adjust_time.strftime("%Y-%m-%d")
    final_date = datetime.strptime(final_date_str, "%Y-%m-%d")
    today = final_date.date()
    return today

@router.message(Command("start"))
async def start(message: Message, state = FSMContext):
    result = await bot.get_chat_member(chat_id='@vokruge_pskov', user_id=message.from_user.id)
    if result.status == 'left':
        print(str(message.from_user.username) + ' –°—Ç–∞—Ç—É—Å:' + str(result.status)+ ' –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω')
        await message.answer(NOTSUB_MESSAGE, reply_markup=await nav.subMenu(), disable_web_page_preview=True)
    else:
        await state.clear()
        print(str(message.from_user.username) + ' –°—Ç–∞—Ç—É—Å:' + str(result.status) + ' –ø—Ä–∏—Å—Ç—É–ø–∏–ª –∫ —Ä–∞–±–æ—Ç–µ')
        file_log(logtext=f'{str(message.from_user.username)} –Ω–∞–∂–∞–ª –∫–æ–º–∞–Ω–¥—É /start')
        await bot.send_photo(message.from_user.id, photo=WELCOME_PHOTO, caption=f'{message.from_user.first_name}, –ø—Ä–∏–≤–µ—Ç!' + '\n' + '\n' +\
          f'–≠—Ç–æ –±–æ—Ç <b>{BOT_NAME_SIMPLE}</b>\n\n–Ø –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ —Å–æ–±—ã—Ç–∏—è –Ω–∞ –±–ª–∏–∂–∞–π—à—É—é –Ω–µ–¥–µ–ª—é.' +\
          f'\n\n‚ú®–í –º–æ–µ–π –±–∞–∑–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –¥–µ—Å—è—Ç–∫–æ–≤ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Å —Å–∞–º—ã–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏ –≥–æ—Ä–æ–¥–∞ –∏ –æ–±–ª–∞—Å—Ç–∏.'+\
          '–ü–æ–¥–±–æ—Ä–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.'+f'\n\nüí∏ –£–∑–Ω–∞–≤–∞–π—Ç–µ –æ –≤—ã–≥–æ–¥–Ω—ã—Ö –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è—Ö –≤ '+\
          f'{CITY_NAME_pr_padezh} —Å –Ω–∞—à–µ–π –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π "–ê–∫—Ü–∏–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"' + '\n\nüìñ ' + '<a href="' +\
          TELEGRAPH_LINK + '">' + "–ß—Ç–æ —Ç–∞–∫–æ–µ ¬´–≤.–û–∫—Ä—É–≥–µ - –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ —Ä—è–¥–æ–º¬ª?" + '</a>',reply_markup=await nav.mainMenu())

@router.callback_query(F.data=="main_menu")
async def main_menu(callback: CallbackQuery, state: FSMContext):
    result = await bot.get_chat_member(chat_id='@vokruge_pskov', user_id=callback.from_user.id)
    if result.status == 'left':
       print(str(callback.from_user.username) + ' –°—Ç–∞—Ç—É—Å:' + str(result.status) + ' –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω')
       await callback.message.edit_text(NOTSUB_MESSAGE, reply_markup=await nav.subMenu(),
                              disable_web_page_preview=True)
    else:
        await state.clear()
        print(str(callback.from_user.username) + ' –°—Ç–∞—Ç—É—Å:' + str(result.status) + ' –ü–µ—Ä–µ—à–µ–ª –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        print(str(callback.from_user.username) + ' –ü–µ—Ä–µ—à–µ–ª –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        file_log(logtext=f'{str(callback.from_user.username)} –ø–µ—Ä–µ—à–µ–ª –≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        await callback.message.delete()
        await bot.send_photo(callback.from_user.id, photo=WELCOME_PHOTO, caption=main_menu_text, reply_markup=await nav.mainMenu())

@router.callback_query(F.data=="show_events_sub")
async def events_category(callback: CallbackQuery, state: FSMContext):
    print(f'{str(callback.from_user.username)} –Ω–∞–∂–∞–ª "–ò—Å–∫–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"')
    file_log(logtext=f'{str(callback.from_user.username)} –Ω–∞–∂–∞–ª –ò—Å–∫–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è')
    await callback.message.delete()
    await callback.message.answer(f"<b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π</b>\n\n<b>üóÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:</b>\n\n<b>–í—Å–µ</b> - –≤—Å–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –∫—Ä–æ–º–µ –¥–µ—Ç—Å–∫–∏—Ö –∏ –≤—ã—Å—Ç–∞–≤–æ–∫ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≤—ã–±–æ—Ä–∞ –¥–Ω—è\n\n<b>üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ</b> - –≤—Å–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –Ω–∞ –Ω–µ–¥–µ–ª—é\n<b>üßí –î–µ—Ç—Å–∫–∏–µ</b> - —Ç–æ–ª—å–∫–æ –¥–µ—Ç—Å–∫–∏–µ –∏ —Å–µ–º–µ–π–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –Ω–∞ –Ω–µ–¥–µ–ª—é\n<b>üñº –í—ã—Å—Ç–∞–≤–∫–∏</b> - –ø—Ä–æ—Ö–æ–¥—è—â–∏–µ —Å–µ–π—á–∞—Å –≤—ã—Å—Ç–∞–≤–∫–∏ –∏ —ç–∫—Å–ø–æ–∑–∏—Ü–∏–∏",\
               reply_markup = await nav.navMenu_category_choose())
    await state.set_state(user_settings.event_day)


#-------------------------------------------------------------
#---------------–†–ï–ñ–ò–ú –ù–ê–°–¢–†–û–ï–ö –ö–ê–¢–ï–ì–û–†–ò–ò –ò –î–ù–Ø----------------
#-------------------------------------------------------------


@router.callback_query(F.data=='–í—Å–µ')
async def events_day(callback: CallbackQuery, state: FSMContext):
    await state.update_data(event_category=callback.data)
    user_settings_dict = await state.get_data()
    if user_settings_dict['event_category'] == '–í—Å–µ':
        print(f'{str(callback.from_user.username)} –í—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é –í—Å–µ')
        file_log(logtext=f'{str(callback.from_user.username)} –≤—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é –í—Å–µ')
        await callback.message.edit_text(f'<b>–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–í—Å–µ –º–µ–ø—Ä–æ–ø—Ä–∏—è—Ç–∏—è"' +\
            "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å:</b>\n\n<b>üî•Ô∏è –ï—Å–ª–∏ –≤—ã –∏—â–∏—Ç–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:</b>\n\n–û—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —Ç–µ —Å–æ–±—ã—Ç–∏—è, –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—É–ø–∏–ª–æ.\n\n<b>üî• –£—Å–ø–µ–≤–∞–π—Ç–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–∞:</b>\n–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –æ—Å–æ–±–µ–Ω–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ, —á–∞—Å—Ç–æ –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∞—Ñ–∏—à—É –Ω–∞ –ø—è—Ç—å-—à–µ—Å—Ç—å –¥–Ω–µ–π –≤–ø–µ—Ä–µ–¥, –≤–µ–¥—å —Ç–æ–≥–¥–∞ —à–∞–Ω—Å –Ω–∞–π—Ç–∏ –º–µ—Å—Ç–∞ –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –±–æ–ª—å—à–µ.", reply_markup = await nav.navMenu_day_choose())
        await state.set_state(user_settings.event_day)

#----------------------------–û–ö–û–ù–ß–ê–ù–ò–ï –†–ï–ñ–ò–ú–ê –ù–ê–°–¢–†–û–ï–ö ---------------------------------------------
#----------------------–†–ï–ñ–ò–ú –°–ë–û–†–ö–ò –°–û–û–ë–©–ï–ù–ò–Ø –í –í–ò–î–ï –ö–ê–¢–ê–õ–û–ì–ê --------------------------------------

@router.callback_query(user_settings.event_day)
async def show_events(callback: CallbackQuery, state: FSMContext):
    user_settings_dict = await state.get_data()
    try:
        if user_settings_dict['event_category'] == '–í—Å–µ':
            await state.update_data(event_day=callback.data)
            print(f'{str(callback.from_user.username)} –≤—ã–±—Ä–∞–ª –¥–µ–Ω—å {callback.data}')
    except:
        await state.update_data(event_category=callback.data)
        user_settings_dict = await state.get_data()
        print(f'{str(callback.from_user.username)} –í—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é {user_settings_dict["event_category"]}')
        file_log(logtext=f'{str(callback.from_user.username)} –≤—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é {user_settings_dict["event_category"]}')
        await state.update_data(event_day='–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ')
    print(str(callback.from_user.username) + ' –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É')
    file_log(logtext=f'{str(callback.from_user.username)} –Ω–∞—á–∞–ª –ø–æ–∏—Å–∫ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {user_settings_dict["event_category"]}')
    await callback.message.edit_text('‚è≥–ü–æ–¥–±–∏—Ä–∞–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è –≤–∞—Å...\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ', reply_markup=await nav.mainMenu_inst())
    global events_day, event_day, list_fin, events_sorted
    list_fin = 0
    events_fin = []
    combined_message = ''
    now = (datetime.now() + timedelta(hours=3))
    events_check = fetch.events_catalogue_fetch(url_get_events)
    user_settings_dict = await state.get_data()
    if user_settings_dict['event_category'] == '–í—ã—Å—Ç–∞–≤–∫–∏':
        for i in range(len(events_check)):
            if events_check[i]['values'][mod_check] != '–ù–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ':
                events_fin.append(events_check[i])
        events_sorted = sorted(events_fin, key=lambda x: datetime.strptime(x['values'][event_end_time], "%d.%m.%y %H:%M:%S"))
    if user_settings_dict['event_category'] != '–í—ã—Å—Ç–∞–≤–∫–∏':
        for i in range(len(events_check)):
            if events_check[i]['values'][mod_check] != '–ù–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ':
                events_fin.append(events_check[i])
        events_sorted = sorted(events_fin,key=lambda x: datetime.strptime(x['values'][event_start_time], "%d.%m.%y %H:%M:%S"))

    if user_settings_dict['event_category'] != '–í—ã—Å—Ç–∞–≤–∫–∏':
        #if user_settings_dict['event_day'] != '–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ':
            combined_message = str('–°–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ' + user_settings_dict['event_category'] + '\n' +'\n')
    #if user_settings_dict['event_day'] == '–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ':
    if user_settings_dict['event_category'] == '–í—ã—Å—Ç–∞–≤–∫–∏':
        combined_message = str('–°–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –≤—ã—Å—Ç–∞–≤–æ–∫ –≤ –±–∞–∑–µ:' + '\n' +'\n')
        # ------------------------ –í–´–í–û–î –°–ü–ò–°–ö–ê –ú–ï–†–û–ü–†–ò–Ø–¢–ò–ô –ù–ê –¢–ï–ö–£–©–ò–ô –î–ï–ù–¨ –° –û–¢–°–ï–ß–ï–ù–ò–ï–ú –ü–†–û–ô–î–ï–ù–ù–´–•
    today = await timeadjust()
    if str(user_settings_dict['event_day']) != "–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ":

        if str(today) == str(user_settings_dict['event_day']):
            event_day = today + timedelta(days=0)
        elif str(today + timedelta(days=1)) == str(user_settings_dict['event_day']):
            event_day = today + timedelta(days=1)
        elif str(today + timedelta(days=2)) == str(user_settings_dict['event_day']):
            event_day = today + timedelta(days=2)
        elif str(today + timedelta(days=3)) == str(user_settings_dict['event_day']):
            event_day = today + timedelta(days=3)
        elif str(today + timedelta(days=4)) == str(user_settings_dict['event_day']):
            event_day = today + timedelta(days=4)
        elif str(today + timedelta(days=5)) == str(user_settings_dict['event_day']):
            event_day = today + timedelta(days=5)
        elif str(today + timedelta(days=6)) == str(user_settings_dict['event_day']):
            event_day = today + timedelta(days=6)
        elif str(today + timedelta(days=7)) == str(user_settings_dict['event_day']):
            event_day = today + timedelta(days=7)
    else:
        event_day = today
    counter_temp = 0
    await state.update_data(events_counter=0)
    for session in events_sorted:
        counter_temp += 1
        session_starttime = datetime.strptime(session['values'][event_start_time], "%d.%m.%y %H:%M:%S")
        session_endtime = datetime.strptime(session['values'][event_end_time], "%d.%m.%y %H:%M:%S")
        session_start = datetime.strptime(session['values'][event_start_time], "%d.%m.%y %H:%M:%S")
        session_end = datetime.strptime(session['values'][event_end_time], "%d.%m.%y %H:%M:%S")
        session_end_date = datetime(session_end.year, session_end.month, session_end.day)
        curr_date = datetime(now.year, now.month, now.day)
        global events_count
        # ------------------------------ –í–´–í–û–î –ú–ï–†–û–ü–†–ò–Ø–¢–ò–ô –¢–û–õ–¨–ö–û –ù–ê –°–ï–ì–û–î–ù–Ø
        if session['values'][event_phone] != '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':
            phone_number = '\n‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω: '+session['values'][event_phone]
        else:
            phone_number = ''

        if user_settings_dict['event_category'] != '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ':  # –í–°–ï –ö–ê–¢–ï–ì–û–†–ò–ò –ö–†–û–ú–ï –ë–ï–°–ü–õ–ê–¢–ù–´–•
            if datetime.fromisoformat(event_day.strftime("%Y-%m-%d")) == datetime.fromisoformat(
                    session_starttime.strftime("%Y-%m-%d")):
                if now.date() == event_day:
                    if session_end.time() > now.time() and session_end.date() == now.date() or session_end.date() != now.date():
                        if session['values'][event_add_type] == '–û—Å–Ω–æ–≤–Ω–æ–π –∞–¥—Ä–µ—Å':
                            google_url = (session['values'][event_yandex])
                        else:
                            google_url = (session['values'][event_set_yandex])
                        if str(session['values'][event_category]) == user_settings_dict['event_category'] or \
                                user_settings_dict['event_category'] == '–í—Å–µ':
                            if str(session['values'][event_category]) != '–í—ã—Å—Ç–∞–≤–∫–∏':
                                    if str(session['values'][event_category]) != '–î–µ—Ç—Å–∫–∏–µ':
                                        if str(session['values'][event_pay_type]) != '–°–≤–æ–±–æ–¥–Ω—ã–π –≤—Ö–æ–¥':
                                            if str(session['values'][event_pay_type]) == '–ü–ª–∞—Ç–Ω–æ':
                                                if session["values"][event_price] == '0':
                                                    combined_message += str(
                                                        f'<a href="' + session["values"][event_mainlink] + f'">' +
                                                        session['values'][event_name] + f'</a>' + '\n' +
                                                        session["values"][
                                                            event_type] + ' ' + session['values'][
                                                            event_age] + ' ' + '\n' + 'üóì ' + str(
                                                            session_starttime.strftime("%d.%m")) + ' ' + str(
                                                            session_starttime.strftime("%H:%M")) + ' - ' + str(
                                                            session_endtime.strftime(
                                                                "%H:%M")) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                        session["values"][event_ticketlink] + f'">' +
                                                        f'–ü–ª–∞—Ç–Ω–æ' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                        session["values"][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                                else:
                                                    combined_message += str(
                                                        f'<a href="' + session["values"][event_mainlink] + f'">' +
                                                        session['values'][event_name] + f'</a>' + '\n' + session["values"][
                                                            event_type] + ' ' + session['values'][
                                                            event_age] + ' ' + '\n' + 'üóì ' + str(
                                                            session_starttime.strftime("%d.%m")) + ' ' + str(
                                                            session_starttime.strftime("%H:%M")) + ' - ' + str(
                                                            session_endtime.strftime(
                                                                "%H:%M")) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                        session["values"][event_ticketlink] + f'">' +
                                                        f'–û—Ç {session["values"][event_price]}—Ä' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                        session["values"][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                            else:
                                                combined_message += str(
                                                    f'<a href="' + session["values"][event_mainlink] + f'">' +
                                                    session['values'][event_name] + f'</a>' + '\n' + session["values"][
                                                        event_type] + ' ' + session['values'][
                                                        event_age] + ' ' + '\n' + 'üóì ' + str(
                                                        session_starttime.strftime("%d.%m")) + ' ' + str(
                                                        session_starttime.strftime("%H:%M")) + ' - ' + str(
                                                        session_endtime.strftime(
                                                            "%H:%M")) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                    session["values"][event_ticketlink] + f'">' +
                                                    session["values"][
                                                        event_pay_type] + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                    session["values"][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                            counter_data = await state.get_data()
                                            await state.update_data(events_counter=int(counter_data['events_counter'])+1)
                                            counter_data = await state.get_data()
                                        else:
                                            combined_message += str(
                                                f'<a href="' + session["values"][event_mainlink] + f'">' +
                                                session["values"][event_name] + f'</a>' + '\n' + session["values"][
                                                    event_type] + ' ' + session["values"][event_age] + ' ' + '\n' +
                                                'üóì ' + str(session_starttime.strftime("%d.%m")) + ' ' + str(
                                                    session_starttime.strftime("%H:%M")) + ' - ' + str(
                                                    session_endtime.strftime("%H:%M")) + '\n' + 'üéü' + ' ' +
                                                session["values"][
                                                    event_pay_type] + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                session["values"][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                            counter_data = await state.get_data()
                                            await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                                            counter_data = await state.get_data()
                                        if counter_data['events_counter'] == 5:
                                            combined_message += 'üîπ'
                                            await state.update_data(events_counter=0)
                                    # if user_settings_dict['event_category'] == '–î–µ—Ç—Å–∫–∏–µ':
                                    #     if str(session['values'][event_pay_type]) != '–°–≤–æ–±–æ–¥–Ω—ã–π –≤—Ö–æ–¥':
                                    #         if str(session['values'][event_pay_type]) == '–ü–ª–∞—Ç–Ω–æ':
                                    #             if session["values"][event_price] == '0':
                                    #                 combined_message += str(
                                    #                     f'<a href="' + session["values"][event_mainlink] + f'">' +
                                    #                     session['values'][event_name] + f'</a>' + '\n' +
                                    #                     session['values'][
                                    #                         event_type] + ' ' + session['values'][
                                    #                         event_age] + ' ' + '\n' + 'üóì ' + str(
                                    #                         session_starttime.strftime('%d.%m')) + ' ' + str(
                                    #                         session_starttime.strftime('%H:%M')) + ' - ' + str(
                                    #                         session_endtime.strftime(
                                    #                             '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                    #                     session['values'][event_ticketlink] + f'">' +
                                    #                     f'–ü–ª–∞—Ç–Ω–æ' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                    #                     session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                    #             else:
                                    #                 combined_message += str(
                                    #                     f'<a href="' + session["values"][event_mainlink] + f'">' +
                                    #                     session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                    #                         event_type] + ' ' + session['values'][
                                    #                         event_age] + ' ' + '\n' + 'üóì ' + str(
                                    #                         session_starttime.strftime('%d.%m')) + ' ' + str(
                                    #                         session_starttime.strftime('%H:%M')) + ' - ' + str(
                                    #                         session_endtime.strftime(
                                    #                             '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                    #                     session['values'][event_ticketlink] + f'">' +
                                    #                     f'–û—Ç {session["values"][event_price]}—Ä' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                    #                     session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                    #         else:
                                    #             combined_message += str(
                                    #                 f'<a href="' + session["values"][event_mainlink] + f'">' +
                                    #                 session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                    #                     event_type] + ' ' + session['values'][
                                    #                     event_age] + ' ' + '\n' + 'üóì ' + str(
                                    #                     session_starttime.strftime('%d.%m')) + ' ' + str(
                                    #                     session_starttime.strftime('%H:%M')) + ' - ' + str(
                                    #                     session_endtime.strftime(
                                    #                         '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                    #                 session['values'][event_ticketlink] + f'">' +
                                    #                 session['values'][
                                    #                     event_pay_type] + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                    #                 session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                    #         counter_data = await state.get_data()
                                    #         await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                                    #         counter_data = await state.get_data()
                                    #     else:
                                    #         combined_message += str(
                                    #             f'<a href="' + session['values'][event_mainlink] + f'">' +
                                    #             session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                    #                 event_type] + ' ' + session['values'][event_age] + ' ' + '\n' +
                                    #             'üóì ' + str(session_starttime.strftime('%d.%m')) + ' ' + str(
                                    #                 session_starttime.strftime('%H:%M')) + ' - ' + str(
                                    #                 session_endtime.strftime('%H:%M')) + '\n' + 'üéü' + ' ' +
                                    #             session['values'][
                                    #                 event_pay_type] + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                    #             session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                    #         counter_data = await state.get_data()
                                    #         await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                                    #         counter_data = await state.get_data()
                                    #     if counter_data['events_counter'] == 5:
                                    #         combined_message += 'üîπ'
                                    #         await state.update_data(events_counter=0)
        if user_settings_dict['event_category'] == '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ':
            if datetime.fromisoformat(event_day.strftime("%Y-%m-%d")) == datetime.fromisoformat(
                    session_starttime.strftime("%Y-%m-%d")):
                if now.date() == event_day:
                    if session_end.time() > now.time():
                        if session['values'][event_add_type] == '–û—Å–Ω–æ–≤–Ω–æ–π –∞–¥—Ä–µ—Å':
                            google_url = (session['values'][event_yandex])
                        else:
                            google_url = (session['values'][event_set_yandex])
                        if str(session['values'][event_pay_type]) != '–ü–ª–∞—Ç–Ω–æ':
                            if str(session['values'][event_category]) != '–í—ã—Å—Ç–∞–≤–∫–∏':
                                if str(session['values'][event_category]) != '–ú–Ω–æ–≥–æ–¥–Ω–µ–≤–Ω—ã–µ':
                                    if str(session['values'][event_category]) != '–î–µ—Ç—Å–∫–∏–µ':
                                        if str(session['values'][event_pay_type]) != '–°–≤–æ–±–æ–¥–Ω—ã–π –≤—Ö–æ–¥':
                                            if str(session['values'][event_pay_type]) == '–ü–ª–∞—Ç–Ω–æ':
                                                if session["values"][event_price] == '0':
                                                    combined_message += str(
                                                        f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                        session['values'][event_name] + f'</a>' + '\n' +
                                                        session['values'][
                                                            event_type] + ' ' + session['values'][
                                                            event_age] + ' ' + '\n' + 'üóì ' + str(
                                                            session_starttime.strftime('%d.%m')) + ' ' + str(
                                                            session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                            session_endtime.strftime(
                                                                '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                        session['values'][event_ticketlink] + f'">' +
                                                        f'–ü–ª–∞—Ç–Ω–æ' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                        session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                                else:
                                                    combined_message += str(
                                                        f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                        session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                            event_type] + ' ' + session['values'][
                                                            event_age] + ' ' + '\n' + 'üóì ' + str(
                                                            session_starttime.strftime('%d.%m')) + ' ' + str(
                                                            session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                            session_endtime.strftime(
                                                                '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                        session['values'][event_ticketlink] + f'">' +
                                                        f'–û—Ç {session["values"][event_price]}—Ä' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                        session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                            else:
                                                combined_message += str(
                                                    f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                    session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                        event_type] + ' ' + session['values'][
                                                        event_age] + ' ' + '\n' + 'üóì ' + str(
                                                        session_starttime.strftime('%d.%m')) + ' ' + str(
                                                        session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                        session_endtime.strftime(
                                                            '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                    session['values'][event_ticketlink] + f'">' +
                                                    session['values'][
                                                        event_pay_type] + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                    session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                            counter_data = await state.get_data()
                                            await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                                            counter_data = await state.get_data()
                                        else:
                                            combined_message += str(
                                                f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                    event_type] + ' ' + session['values'][event_age] + ' ' + '\n' +
                                                'üóì ' + str(session_starttime.strftime('%d.%m')) + ' ' + str(
                                                    session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                    session_endtime.strftime('%H:%M')) + '\n' + 'üéü' + ' ' +
                                                session['values'][
                                                    event_pay_type] + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                            counter_data = await state.get_data()
                                            await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                                            counter_data = await state.get_data()
                                        if counter_data['events_counter'] == 5:
                                            combined_message += 'üîπ'
                                            await state.update_data(events_counter=0)
                                    if user_settings_dict['event_category'] == '–î–µ—Ç—Å–∫–∏–µ':
                                        if str(session['values'][event_pay_type]) != '–°–≤–æ–±–æ–¥–Ω—ã–π –≤—Ö–æ–¥':
                                            if str(session['values'][event_pay_type]) == '–ü–ª–∞—Ç–Ω–æ':
                                                if session["values"][event_price] == '0':
                                                    combined_message += str(
                                                        f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                        session['values'][event_name] + f'</a>' + '\n' +
                                                        session['values'][
                                                            event_type] + ' ' + session['values'][
                                                            event_age] + ' ' + '\n' + 'üóì ' + str(
                                                            session_starttime.strftime('%d.%m')) + ' ' + str(
                                                            session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                            session_endtime.strftime(
                                                                '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                        session['values'][event_ticketlink] + f'">' +
                                                        f'–ü–ª–∞—Ç–Ω–æ' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                        session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                                else:
                                                    combined_message += str(
                                                        f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                        session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                            event_type] + ' ' + session['values'][
                                                            event_age] + ' ' + '\n' + 'üóì ' + str(
                                                            session_starttime.strftime('%d.%m')) + ' ' + str(
                                                            session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                            session_endtime.strftime(
                                                                '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                        session['values'][event_ticketlink] + f'">' +
                                                        f'–û—Ç {session["values"][event_price]}—Ä' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                        session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                            else:
                                                combined_message += str(
                                                    f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                    session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                        event_type] + ' ' + session['values'][
                                                        event_age] + ' ' + '\n' + 'üóì ' + str(
                                                        session_starttime.strftime('%d.%m')) + ' ' + str(
                                                        session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                        session_endtime.strftime(
                                                            '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                    session['values'][event_ticketlink] + f'">' +
                                                    session['values'][
                                                        event_pay_type] + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                    session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                            counter_data = await state.get_data()
                                            await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                                            counter_data = await state.get_data()
                                        else:
                                            combined_message += str(
                                                f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                    event_type] + ' ' + session['values'][event_age] + ' ' + '\n' +
                                                'üóì ' + str(session_starttime.strftime('%d.%m')) + ' ' + str(
                                                    session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                    session_endtime.strftime('%H:%M')) + '\n' + 'üéü' + ' ' +
                                                session['values'][
                                                    event_pay_type] + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                            counter_data = await state.get_data()
                                            await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                                            counter_data = await state.get_data()
                                        if counter_data['events_counter'] == 5:
                                            combined_message += 'üîπ'
                                            await state.update_data(events_counter=0)

        # ------------------------------ –í–´–í–û–î –ú–ï–†–û–ü–†–ò–Ø–¢–ò–ô –ù–ê –õ–Æ–ë–û–ô –î–ï–ù–¨
        if now.date() != event_day:
            if user_settings_dict['event_category'] != '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ':  # –¢–û–õ–¨–ö–û –ü–õ–ê–¢–ù–´–ï
                if datetime.fromisoformat(event_day.strftime("%Y-%m-%d")) == datetime.fromisoformat(
                        session_starttime.strftime("%Y-%m-%d")):
                    if session['values'][event_add_type] == '–û—Å–Ω–æ–≤–Ω–æ–π –∞–¥—Ä–µ—Å':
                        google_url = (session['values'][event_yandex])
                    else:
                        google_url = (session['values'][event_set_yandex])
                    if str(session['values'][event_category]) == user_settings_dict['event_category'] or \
                            user_settings_dict['event_category'] == '–í—Å–µ':  # –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï –ö–ê–¢–ï–ì–û–†–ò–ò –ò–õ–ò –í–°–ï
                        if str(session['values'][event_category]) != '–í—ã—Å—Ç–∞–≤–∫–∏':  # –ù–ï –í–´–°–¢–ê–í–ö–ò
                                if str(session['values'][event_category]) != '–î–µ—Ç—Å–∫–∏–µ':  # –ù–ï –î–ï–¢–°–ö–ò–ï
                                    if str(session['values'][event_pay_type]) != '–°–≤–æ–±–æ–¥–Ω—ã–π –≤—Ö–æ–¥':
                                        if str(session['values'][event_pay_type]) == '–ü–ª–∞—Ç–Ω–æ':
                                            if session["values"][event_price] == '0':
                                                combined_message += str(
                                                    f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                    session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                        event_type] + ' ' + session['values'][
                                                        event_age] + ' ' + '\n' + 'üóì ' + str(
                                                        session_starttime.strftime('%d.%m')) + ' ' + str(
                                                        session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                        session_endtime.strftime(
                                                            '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                    session['values'][event_ticketlink] + f'">' +
                                                    f'–ü–ª–∞—Ç–Ω–æ' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                    session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                            else:
                                                combined_message += str(
                                                    f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                    session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                        event_type] + ' ' + session['values'][
                                                        event_age] + ' ' + '\n' + 'üóì ' + str(
                                                        session_starttime.strftime('%d.%m')) + ' ' + str(
                                                        session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                        session_endtime.strftime(
                                                            '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                    session['values'][event_ticketlink] + f'">' +
                                                    f'–û—Ç {session["values"][event_price]}—Ä' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                    session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                        else:
                                            combined_message += str(
                                                f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                    event_type] + ' ' + session['values'][
                                                    event_age] + ' ' + '\n' + 'üóì ' + str(
                                                    session_starttime.strftime('%d.%m')) + ' ' + str(
                                                    session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                    session_endtime.strftime(
                                                        '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                session['values'][event_ticketlink] + f'">' +
                                                session['values'][
                                                    event_pay_type] + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                        counter_data = await state.get_data()
                                        await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                                        counter_data = await state.get_data()
                                    else:
                                        combined_message += str(
                                            f'<a href="' + session['values'][event_mainlink] + f'">' +
                                            session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                event_type] + ' ' + session['values'][event_age] + ' ' + '\n' +
                                            'üóì ' + str(session_starttime.strftime('%d.%m')) + ' ' + str(
                                                session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                session_endtime.strftime('%H:%M')) + '\n' + 'üéü' + ' ' +
                                            session['values'][
                                                event_pay_type] + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                            session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                        counter_data = await state.get_data()
                                        await state.update_data(events_counter=int(counter_data['events_counter'])+1)
                                        counter_data = await state.get_data()
                                    if counter_data['events_counter'] == 5:
                                        combined_message += 'üîπ'
                                        await state.update_data(events_counter=0)
                                # if user_settings_dict['event_category'] == '–î–µ—Ç—Å–∫–∏–µ':
                                #     if str(session['values'][event_pay_type]) != '–°–≤–æ–±–æ–¥–Ω—ã–π –≤—Ö–æ–¥':
                                #         if str(session['values'][event_pay_type]) == '–ü–ª–∞—Ç–Ω–æ':
                                #             if session["values"][event_price] == '0':
                                #                 combined_message += str(
                                #                     f'<a href="' + session['values'][event_mainlink] + f'">' +
                                #                     session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                #                         event_type] + ' ' + session['values'][
                                #                         event_age] + ' ' + '\n' + 'üóì ' + str(
                                #                         session_starttime.strftime('%d.%m')) + ' ' + str(
                                #                         session_starttime.strftime('%H:%M')) + ' - ' + str(
                                #                         session_endtime.strftime(
                                #                             '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                #                     session['values'][event_ticketlink] + f'">' +
                                #                     f'–ü–ª–∞—Ç–Ω–æ' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                #                     session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                #             else:
                                #                 combined_message += str(
                                #                     f'<a href="' + session['values'][event_mainlink] + f'">' +
                                #                     session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                #                         event_type] + ' ' + session['values'][
                                #                         event_age] + ' ' + '\n' + 'üóì ' + str(
                                #                         session_starttime.strftime('%d.%m')) + ' ' + str(
                                #                         session_starttime.strftime('%H:%M')) + ' - ' + str(
                                #                         session_endtime.strftime(
                                #                             '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                #                     session['values'][event_ticketlink] + f'">' +
                                #                     f'–û—Ç {session["values"][event_price]}—Ä' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                #                     session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                #         else:
                                #             combined_message += str(
                                #                 f'<a href="' + session['values'][event_mainlink] + f'">' +
                                #                 session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                #                     event_type] + ' ' + session['values'][
                                #                     event_age] + ' ' + '\n' + 'üóì ' + str(
                                #                     session_starttime.strftime('%d.%m')) + ' ' + str(
                                #                     session_starttime.strftime('%H:%M')) + ' - ' + str(
                                #                     session_endtime.strftime(
                                #                         '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                #                 session['values'][event_ticketlink] + f'">' +
                                #                 session['values'][
                                #                     event_pay_type] + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                #                 session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                #         counter_data = await state.get_data()
                                #         await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                                #         counter_data = await state.get_data()
                                #     else:
                                #         combined_message += str(
                                #             f'<a href="' + session['values'][event_mainlink] + f'">' +
                                #             session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                #                 event_type] + ' ' + session['values'][event_age] + ' ' + '\n' +
                                #             'üóì ' + str(session_starttime.strftime('%d.%m')) + ' ' + str(
                                #                 session_starttime.strftime('%H:%M')) + ' - ' + str(
                                #                 session_endtime.strftime('%H:%M')) + '\n' + 'üéü' + ' ' +
                                #             session['values'][
                                #                 event_pay_type] + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                #             session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                #         counter_data = await state.get_data()
                                #         await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                                #         counter_data = await state.get_data()
                                #     if counter_data['events_counter'] == 5:
                                #         combined_message += 'üîπ'
                                #         await state.update_data(events_counter=0)
            else:  # –¢–û–õ–¨–ö–û –ë–ï–°–ü–õ–ê–¢–ù–´–ï
                if datetime.fromisoformat(event_day.strftime("%Y-%m-%d")) == datetime.fromisoformat(
                        session_starttime.strftime("%Y-%m-%d")):
                    if session['values'][event_add_type] == '–û—Å–Ω–æ–≤–Ω–æ–π –∞–¥—Ä–µ—Å':
                        google_url = (session['values'][event_yandex])
                    else:
                        google_url = (session['values'][event_set_yandex])
                    if str(session['values'][event_pay_type]) != '–ü–ª–∞—Ç–Ω–æ':  # –í–°–ï –ë–ï–°–ü–õ–ê–¢–ù–´–ï
                        if str(session['values'][event_category]) != '–í—ã—Å—Ç–∞–≤–∫–∏':  # –ù–ï –í–´–°–¢–ê–í–ö–ò
                            if str(session['values'][event_category]) != '–ú–Ω–æ–≥–æ–¥–Ω–µ–≤–Ω—ã–µ':
                                if str(session['values'][event_category]) != '–î–µ—Ç—Å–∫–∏–µ':  # –ù–ï –î–ï–¢–°–ö–ò–ï
                                    if str(session['values'][event_pay_type]) != '–°–≤–æ–±–æ–¥–Ω—ã–π –≤—Ö–æ–¥':
                                        if str(session['values'][event_pay_type]) == '–ü–ª–∞—Ç–Ω–æ':
                                            if session["values"][event_price] == '0':
                                                combined_message += str(
                                                    f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                    session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                        event_type] + ' ' + session['values'][
                                                        event_age] + ' ' + '\n' + 'üóì ' + str(
                                                        session_starttime.strftime('%d.%m')) + ' ' + str(
                                                        session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                        session_endtime.strftime(
                                                            '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                    session['values'][event_ticketlink] + f'">' +
                                                    f'–ü–ª–∞—Ç–Ω–æ' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                    session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                            else:
                                                combined_message += str(
                                                    f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                    session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                        event_type] + ' ' + session['values'][
                                                        event_age] + ' ' + '\n' + 'üóì ' + str(
                                                        session_starttime.strftime('%d.%m')) + ' ' + str(
                                                        session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                        session_endtime.strftime(
                                                            '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                    session['values'][event_ticketlink] + f'">' +
                                                    f'–û—Ç {session["values"][event_price]}—Ä' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                    session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                        else:
                                            combined_message += str(
                                                f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                    event_type] + ' ' + session['values'][
                                                    event_age] + ' ' + '\n' + 'üóì ' + str(
                                                    session_starttime.strftime('%d.%m')) + ' ' + str(
                                                    session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                    session_endtime.strftime(
                                                        '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                session['values'][event_ticketlink] + f'">' +
                                                session['values'][
                                                    event_pay_type] + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                        counter_data = await state.get_data()
                                        await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                                        counter_data = await state.get_data()
                                    else:
                                        combined_message += str(
                                            f'<a href="' + session['values'][event_mainlink] + f'">' +
                                            session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                event_type] + ' ' + session['values'][event_age] + ' ' + '\n' +
                                            'üóì ' + str(session_starttime.strftime('%d.%m')) + ' ' + str(
                                                session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                session_endtime.strftime('%H:%M')) + '\n' + 'üéü' + ' ' +
                                            session['values'][
                                                event_pay_type] + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                            session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                        counter_data = await state.get_data()
                                        await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                                        counter_data = await state.get_data()
                                    if counter_data['events_counter'] == 5:
                                        combined_message += 'üîπ'
                                        await state.update_data(events_counter=0)
                                if user_settings_dict['event_category'] == '–î–µ—Ç—Å–∫–∏–µ':
                                    if str(session['values'][event_pay_type]) != '–°–≤–æ–±–æ–¥–Ω—ã–π –≤—Ö–æ–¥':
                                        if str(session['values'][event_pay_type]) == '–ü–ª–∞—Ç–Ω–æ':
                                            if session["values"][event_price] == '0':
                                                combined_message += str(
                                                    f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                    session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                        event_type] + ' ' + session['values'][
                                                        event_age] + ' ' + '\n' + 'üóì ' + str(
                                                        session_starttime.strftime('%d.%m')) + ' ' + str(
                                                        session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                        session_endtime.strftime(
                                                            '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                    session['values'][event_ticketlink] + f'">' +
                                                    f'–ü–ª–∞—Ç–Ω–æ' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                    session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                            else:
                                                combined_message += str(
                                                    f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                    session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                        event_type] + ' ' + session['values'][
                                                        event_age] + ' ' + '\n' + 'üóì ' + str(
                                                        session_starttime.strftime('%d.%m')) + ' ' + str(
                                                        session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                        session_endtime.strftime(
                                                            '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                    session['values'][event_ticketlink] + f'">' +
                                                    f'–û—Ç {session["values"][event_price]}—Ä' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                    session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                        else:
                                            combined_message += str(
                                                f'<a href="' + session['values'][event_mainlink] + f'">' +
                                                session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                    event_type] + ' ' + session['values'][
                                                    event_age] + ' ' + '\n' + 'üóì ' + str(
                                                    session_starttime.strftime('%d.%m')) + ' ' + str(
                                                    session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                    session_endtime.strftime(
                                                        '%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                session['values'][event_ticketlink] + f'">' +
                                                session['values'][
                                                    event_pay_type] + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                        counter_data = await state.get_data()
                                        await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                                        counter_data = await state.get_data()
                                    else:
                                        combined_message += str(
                                            f'<a href="' + session['values'][event_mainlink] + f'">' +
                                            session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                event_type] + ' ' + session['values'][event_age] + ' ' + '\n' +
                                            'üóì ' + str(session_starttime.strftime('%d.%m')) + ' ' + str(
                                                session_starttime.strftime('%H:%M')) + ' - ' + str(
                                                session_endtime.strftime('%H:%M')) + '\n' + 'üéü' + ' ' +
                                            session['values'][
                                                event_pay_type] + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                            session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                        counter_data = await state.get_data()
                                        await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                                        counter_data = await state.get_data()
                                    if counter_data['events_counter'] == 5:
                                        combined_message += 'üîπ'
                                        await state.update_data(events_counter=0)

        # ------------------- –í–´–í–û–î –¢–û–õ–¨–ö–û –í–´–°–¢–ê–í–û–ö

        if user_settings_dict['event_category'] == '–í—ã—Å—Ç–∞–≤–∫–∏':
            if session_end_date >= curr_date:
                if session['values'][event_add_type] == '–û—Å–Ω–æ–≤–Ω–æ–π –∞–¥—Ä–µ—Å':
                    google_url = (session['values'][event_yandex])
                else:
                    google_url = (session['values'][event_set_yandex])
                # ---- –§–ò–õ–¨–¢–† –ö–ê–¢–ï–ì–û–†–ò–ò
                if str(session['values'][event_category]) == '–í—ã—Å—Ç–∞–≤–∫–∏':
                    if str(session['values'][event_pay_type]) != '–°–≤–æ–±–æ–¥–Ω—ã–π –≤—Ö–æ–¥':
                        if str(session['values'][event_pay_type]) == '–ü–ª–∞—Ç–Ω–æ':
                            if session["values"][event_price] == '0':
                                combined_message += str(f'<a href="' +
                                                        session['values'][event_mainlink] + f'">' +
                                                        session['values'][event_name] + f'</a>' + '\n' +
                                                        session['values'][event_type] + ' ' + session['values'][
                                                            event_age] + ' ' + '\n' + 'üóì ' + '–î–æ ' + str(
                                    session_endtime.strftime('%d.%m.%y')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                        session['values'][event_ticketlink] + f'">' +
                                                        f'–ü–ª–∞—Ç–Ω–æ' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                        session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                            else:
                                combined_message += str(f'<a href="' +
                                                        session['values'][event_mainlink] + f'">' +
                                                        session['values'][event_name] + f'</a>' + '\n' +
                                                        session['values'][event_type] + ' ' + session['values'][
                                                            event_age] + ' ' + '\n' + 'üóì ' + '–î–æ ' + str(
                                    session_endtime.strftime('%d.%m.%y')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                        session['values'][event_ticketlink] + f'">' +
                                                        f'–û—Ç {session["values"][event_price]}—Ä' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                        session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                        else:
                            combined_message += str(f'<a href="' +
                                                    session['values'][event_mainlink] + f'">' +
                                                    session['values'][event_name] + f'</a>' + '\n' +
                                                    session['values'][event_type] + ' ' + session['values'][
                                                        event_age] + ' ' + '\n' + 'üóì ' + '–î–æ ' + str(
                                session_endtime.strftime('%d.%m.%y')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                    session['values'][event_ticketlink] + f'">' +
                                                    session['values'][
                                                        event_pay_type] + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                    session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                        counter_data = await state.get_data()
                        await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                        counter_data = await state.get_data()
                    else:
                        combined_message += str(f'<a href="' +
                                                session['values'][event_mainlink] + f'">' +
                                                session['values'][event_name] + f'</a>' + '\n' +
                                                session['values'][event_type] + ' ' + session['values'][
                                                    event_age] + ' ' + '\n' + 'üóì ' + ' –î–æ ' + str(
                            session_endtime.strftime('%d.%m.%y')) + '\n' + 'üéü' + ' ' + session['values'][
                                                    event_pay_type] + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                        counter_data = await state.get_data()
                        await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                        counter_data = await state.get_data()
                    if counter_data['events_counter'] == 5:
                        combined_message += 'üîπ'
                        await state.update_data(events_counter=0)

        #--------- –¢–û–õ–¨–ö–û –î–ï–¢–°–ö–ò–ï NEW
        if user_settings_dict['event_category'] == '–î–µ—Ç—Å–∫–∏–µ':
                    if session_end.time() > now.time() and session_end.date() == now.date() or session_end.date() > now.date():
                        if session['values'][event_add_type] == '–û—Å–Ω–æ–≤–Ω–æ–π –∞–¥—Ä–µ—Å':
                            google_url = (session['values'][event_yandex])
                        else:
                            google_url = (session['values'][event_set_yandex])
                        weekday = session_starttime.strftime('%a.')
                        if weekday == 'Mon.':
                            weekday = '–ü–Ω.'
                        elif weekday == 'Tue.':
                            weekday = '–í—Ç.'
                        elif weekday == 'Wed.':
                            weekday = '–°—Ä.'
                        elif weekday == 'Thu.':
                            weekday = '–ß—Ç.'
                        elif weekday == 'Fri.':
                            weekday = '–ü—Ç.'
                        elif weekday == 'Sat.':
                            weekday = '–°–±.'
                        elif weekday == 'Sun.':
                            weekday = '–í—Å.'
                        # ---- –§–ò–õ–¨–¢–† –ö–ê–¢–ï–ì–û–†–ò–ò
                        if str(session['values'][event_category]) == '–î–µ—Ç—Å–∫–∏–µ':
                            if str(session['values'][event_pay_type]) != '–°–≤–æ–±–æ–¥–Ω—ã–π –≤—Ö–æ–¥':
                                if str(session['values'][event_pay_type]) == '–ü–ª–∞—Ç–Ω–æ':
                                    if session["values"][event_price] == '0':
                                        combined_message += str(f'<a href="' +
                                                                session['values'][event_mainlink] + f'">' +
                                                                session['values'][event_name] + f'</a>' + '\n' +
                                                                session['values'][event_type] + ' ' + session['values'][
                                                                    event_age] + ' ' + '\n' + 'üóì ' + str(
                                            session_starttime.strftime('%d.%m ') + weekday + session_starttime.strftime(' %H:%M')) + ' - ' + session_endtime.strftime('%H:%M') + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                                session['values'][event_ticketlink] + f'">' +
                                                                f'–ü–ª–∞—Ç–Ω–æ' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                                session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                    else:
                                        combined_message += str(f'<a href="' +
                                                                session['values'][event_mainlink] + f'">' +
                                                                session['values'][event_name] + f'</a>' + '\n' +
                                                                session['values'][event_type] + ' ' + session['values'][
                                                                    event_age] + ' ' + '\n' + 'üóì ' + str(
                                            session_starttime.strftime('%d.%m ') + weekday + session_starttime.strftime(' %H:%M')) + ' - ' + session_endtime.strftime('%H:%M') + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                                session['values'][event_ticketlink] + f'">' +
                                                                f'–û—Ç {session["values"][event_price]}—Ä' + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                                session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                else:
                                    combined_message += str(f'<a href="' +
                                                            session['values'][event_mainlink] + f'">' +
                                                            session['values'][event_name] + f'</a>' + '\n' +
                                                            session['values'][event_type] + ' ' + session['values'][
                                                                event_age] + ' ' + '\n' + 'üóì ' + str(
                                        session_starttime.strftime('%d.%m ') + weekday + session_starttime.strftime(
                                            ' %H:%M')) + ' - ' + session_endtime.strftime('%H:%M') + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                            session['values'][event_ticketlink] + f'">' +
                                                            session['values'][
                                                                event_pay_type] + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                            session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                counter_data = await state.get_data()
                                await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                                counter_data = await state.get_data()
                            else:
                                combined_message += str(f'<a href="' +
                                                        session['values'][event_mainlink] + f'">' +
                                                        session['values'][event_name] + f'</a>' + '\n' +
                                                        session['values'][event_type] + ' ' + session['values'][
                                                            event_age] + ' ' + '\n' + 'üóì ' + str(
                                    session_starttime.strftime('%d.%m ') + weekday + session_starttime.strftime(
                                        ' %H:%M')) + ' - ' + session_endtime.strftime('%H:%M') + '\n' + 'üéü' + ' ' + session['values'][
                                                            event_pay_type] + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                        session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                                counter_data = await state.get_data()
                                await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                                counter_data = await state.get_data()
                            if counter_data['events_counter'] == 5:
                                combined_message += 'üîπ'
                                await state.update_data(events_counter=0)

        # ---------- –¢–û–õ–¨–ö–û –ë–ï–°–ü–õ–ê–¢–ù–´–ï NEW
        if user_settings_dict['event_category'] == '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ' and str(session['values'][event_category]) != '–í—ã—Å—Ç–∞–≤–∫–∏':
            if session_end.time() > now.time() and session_end.date() == now.date() or session_end.date() > now.date():
                if session['values'][event_add_type] == '–û—Å–Ω–æ–≤–Ω–æ–π –∞–¥—Ä–µ—Å':
                    google_url = (session['values'][event_yandex])
                else:
                    google_url = (session['values'][event_set_yandex])
                weekday = session_starttime.strftime('%a.')
                if weekday == 'Mon.':
                    weekday = '–ü–Ω.'
                elif weekday == 'Tue.':
                    weekday = '–í—Ç.'
                elif weekday == 'Wed.':
                    weekday = '–°—Ä.'
                elif weekday == 'Thu.':
                    weekday = '–ß—Ç.'
                elif weekday == 'Fri.':
                    weekday = '–ü—Ç.'
                elif weekday == 'Sat.':
                    weekday = '–°–±.'
                elif weekday == 'Sun.':
                    weekday = '–í—Å.'
                # ---- –§–ò–õ–¨–¢–† –ö–ê–¢–ï–ì–û–†–ò–ò
                if str(session['values'][event_pay_type]) != '–ü–ª–∞—Ç–Ω–æ':
                    if str(session['values'][event_pay_type]) != '–°–≤–æ–±–æ–¥–Ω—ã–π –≤—Ö–æ–¥':
                        combined_message += str(f'<a href="' +
                                                    session['values'][event_mainlink] + f'">' +
                                                    session['values'][event_name] + f'</a>' + '\n' +
                                                    session['values'][event_type] + ' ' + session['values'][
                                                        event_age] + ' ' + '\n' + 'üóì ' + str(
                                session_starttime.strftime('%d.%m ') + weekday + session_starttime.strftime(' %H:%M')) + ' - ' + session_endtime.strftime('%H:%M') + '\n' + 'üéü' + ' ' + f'<a href="' +
                                                    session['values'][event_ticketlink] + f'">' +
                                                    session['values'][
                                                        event_pay_type] + f'</a>' + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                    session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                        counter_data = await state.get_data()
                        await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                        counter_data = await state.get_data()
                    else:
                        combined_message += str(f'<a href="' +
                                                session['values'][event_mainlink] + f'">' +
                                                session['values'][event_name] + f'</a>' + '\n' +
                                                session['values'][event_type] + ' ' + session['values'][
                                                    event_age] + ' ' + '\n' + 'üóì ' + str(
                            session_starttime.strftime('%d.%m ') + weekday + session_starttime.strftime(' %H:%M')) + ' - ' + session_endtime.strftime('%H:%M') + '\n' + 'üéü' + ' ' + session['values'][
                                                    event_pay_type] + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                                session['values'][event_org] + f'</a>' + phone_number + '\n' + '\n')
                        counter_data = await state.get_data()
                        await state.update_data(events_counter=int(counter_data['events_counter']) + 1)
                        counter_data = await state.get_data()
                    if counter_data['events_counter'] == 5:
                        combined_message += 'üîπ'
                        await state.update_data(events_counter=0)



        # ----------------------- –§–ò–ù–ê–õ –°–ë–û–†–ö–ò –°–û–û–ë–©–ï–ù–ò–Ø –í –í–ò–î–ï –ö–ê–¢–ê–õ–û–ì–ê
    await state.set_state(user_settings.part)
    await state.update_data(part=0)
    if combined_message.count('üîπ') != 0:
        list_fin = 1
        await state.update_data(body=combined_message.split('üîπ'))
        events_dict = await state.get_data()
        events_list = events_dict['body']
        for i in range(len(events_list)):
            events_list[i] = '\n\n' + events_list[i] + 'üìñ–°—Ç—Ä–∞–Ω–∏—Ü–∞ ' + str(i + 1) + ' –∏–∑ ' + str(len(events_list)) + '\n' + '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ ' + '<a href="' + BOT_LINK +'">' + BOT_NAME_SIMPLE + f'</a>'
            if i == len(events_list)-1:
                events_list[i] = events_list[i] + '\n\n‚úÖ–í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π —Å —É—á–µ—Ç–æ–º –≤–∞—à–∏—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É - –≤—Å–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç.\n\nüîÑ–î–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"'
        if len(events_list) != 1:
            await callback.message.edit_text(events_list[0], parse_mode=ParseMode.HTML, disable_web_page_preview=True, reply_markup=await nav.navMenu_events_catalogue_prevstop())

    if combined_message.count('üîπ') == 0:
        combined_message += '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ ' + '<a href="' + BOT_LINK +'">' + BOT_NAME_SIMPLE + f'</a>' + '\n\n–î–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"'
        await callback.message.delete()
        await bot.send_photo(callback.from_user.id,
                                 photo=paginate_end_photo,
                                 caption=combined_message,  parse_mode=ParseMode.HTML,
                                 reply_markup=await nav.navMenu_events_catalogue_none())
# --------------------------–û–ö–û–ù–ß–ê–ù–ò–ï –†–ï–ñ–ò–ú–ê –°–ë–û–†–ö–ò –°–û–û–ë–©–ï–ù–ò–Ø –í –í–ò–î–ï –ö–ê–¢–ê–õ–û–ì–ê-------------------

# ---------------------------------------- –í–´–í–û–î –ö–ê–¢–ê–õ–û–ì–ê –ù–ê –≠–ö–†–ê–ù ----------------------------------------------
#---–ë–õ–û–ö –ù–ê–í–ò–ì–ê–¶–ò–ò –ü–†–ò –í–´–í–û–î–ï –ú–ï–†–û–ü–†–ò–Ø–¢–ò–ô - –ö–ê–¢–ê–õ–û–ì

@router.callback_query(F.data == 'next_events_catalogue')
async def show_events_next(callback: CallbackQuery, state: FSMContext):
    events_info = await state.get_data()
    await state.update_data(part=int(events_info['part'])+1)
    events_info = await state.get_data()
    print(f'{str(callback.from_user.username)} –Ω–∞–∂–∞–ª –í–ø–µ—Ä–µ–¥ –∏ –ø–µ—Ä–µ—à–µ–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É'+\
          f'{int(events_info["part"])+1}/{len(events_info["body"])}')
    if int(events_info['part']) < len(events_info['body'])-1:
        await callback.message.edit_text((events_info['body'])[events_info['part']], parse_mode=ParseMode.HTML, disable_web_page_preview=True, reply_markup=nav.navMenu_events_catalogue())
    if int(events_info['part']) == len(events_info['body'])-1:
        await callback.message.delete()
        await bot.send_photo(callback.from_user.id, photo=paginate_end_photo, caption=(events_info['body'])[events_info['part']], parse_mode=ParseMode.HTML, reply_markup=nav.navMenu_events_catalogue_nextstop())

@router.callback_query(F.data == 'prev_events_catalogue')
async def show_events_prev(callback: CallbackQuery, state: FSMContext):
     events_info = await state.get_data()
     await state.update_data(part=int(events_info['part']) - 1)
     events_info = await state.get_data()
     print(f'{str(callback.from_user.username)} –Ω–∞–∂–∞–ª –ù–∞–∑–∞–¥ –∏ –ø–µ—Ä–µ—à–µ–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É {int(events_info["part"]) + 1}/{len(events_info["body"])}')
     if int(events_info['part']) > 0:
         await callback.message.delete()
         await callback.message.answer(f'{(events_info["body"])[events_info["part"]]}', parse_mode=ParseMode.HTML, disable_web_page_preview=True, reply_markup=nav.navMenu_events_catalogue())
     if int(events_info['part']) == 0:
         await bot.delete_message(callback.from_user.id, callback.message.message_id)
         await callback.message.answer(f'{(events_info["body"])[events_info["part"]]}', parse_mode=ParseMode.HTML, disable_web_page_preview=True, reply_markup=await nav.navMenu_events_catalogue_prevstop())
#---------------------------------- –û–ö–û–ù–ß–ê–ù–ò–ï –í–´–í–û–î–ê –ö–ê–¢–ê–õ–û–ì–ê –ù–ê –≠–ö–†–ê–ù -----------------------------------------------------
# -------------------------------–°–ë–û–†–ö–ê –ö–ê–†–¢–û–ß–ï–ö –†–ï–ö–û–ú–ï–ù–î–û–í–ê–ù–ù–´–• –ú–ï–†–û–ü–†–ò–Ø–¢–ò–ô------------------------------------------

@router.callback_query(F.data=="recommended")
async def show_events_cards(callback: CallbackQuery, state: FSMContext):
    print(f'{str(callback.from_user.username)} –Ω–∞–∂–∞–ª –ù–∞—à–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏')
    file_log(
        logtext=f'{str(callback.from_user.username)} –Ω–∞–∂–∞–ª –ù–∞—à–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏')
    events_fin = []
    combined_message = ''
    photo_combined = ''
    now = datetime.now()
    events_check = fetch.events_catalogue_fetch(url_get_events)
    for i in range(len(events_check)):
        if events_check[i]['values'][mod_check] != '–ù–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ':
            events_fin.append(events_check[i])
    events_sorted = sorted(events_fin, key=lambda x: datetime.strptime(x['values'][event_start_time], "%d.%m.%y %H:%M:%S"))
    for session in events_sorted:
        session_starttime = datetime.strptime(session['values'][event_start_time], "%d.%m.%y %H:%M:%S")
        session_endtime = datetime.strptime(session['values'][event_end_time], "%d.%m.%y %H:%M:%S")
        session_start = datetime.strptime(session['values'][event_start_time], "%d.%m.%y %H:%M:%S")
        session_end = datetime.strptime(session['values'][event_end_time], "%d.%m.%y %H:%M:%S")
        session_end_date = datetime(session_end.year, session_end.month, session_end.day)
        curr_date = datetime(now.year, now.month, now.day)
        await state.update_data(events_counter=0)

        if session['values'][event_photo] != None:
            if session['values'][event_price] != '0':
                price = (' –æ—Ç ' + str(session['values'][event_price]) + '‚ÇΩ')
            else:
                price = ('')
            temp_photo = session['values'][event_photo]
            id = session['id']
            session['values'][event_photo] = 'https://quintadb.ru/images/data/cwgmoxoavcW6SJzehdV8o6/' + str(
                id) + '/' + str(
                temp_photo)
            if session['values'][event_desc] == None:
                session['values'][event_desc] = '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.\n'
            if session['values'][event_add_type] == '–û—Å–Ω–æ–≤–Ω–æ–π –∞–¥—Ä–µ—Å':
                events_lat = (session['values'][event_lat])
                events_long = (session['values'][event_long])
                google_url = (session['values'][event_yandex])
            else:
                events_lat = (session['values'][event_set_lat])
                events_long = (session['values'][event_set_long])
                google_url = (session['values'][event_set_yandex])
            if session['values'][event_category] == '–ú–Ω–æ–≥–æ–¥–Ω–µ–≤–Ω—ã–µ':
                if str(session['values'][event_pay_type]) != '–°–≤–æ–±–æ–¥–Ω—ã–π –≤—Ö–æ–¥':

                    photo_combined += session['values'][event_photo]
                    combined_message += str('\n' + session['values'][event_desc] + '\n' + '\n' + f'<a href="' +
                                            session['values'][event_mainlink] + f'">' +
                                            session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                event_type] + ' ' + session['values'][
                                                event_age] + ' ' + '\n' + 'üóì –ú–Ω–æ–≥–æ–¥–Ω–µ–≤–Ω–æ–µ: ' + str(
                        session_starttime.strftime('%d.%m')) + ' - ' + str(
                        session_endtime.strftime('%d.%m')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                                            session['values'][event_ticketlink] + f'">' +
                                            session['values'][event_pay_type] + f'</a>' + str(
                        price) + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' + session['values'][
                                                event_org] + f'</a>' + '\n' + '\n')
                    counter_data = await state.get_data()
                    await state.update_data(events_counter = counter_data['events_counter']+1)
                    counter_data = await state.get_data()

                else:
                    photo_combined += session['values'][event_photo]
                    combined_message += str('\n' + session['values'][event_desc] + '\n' + '\n' + f'<a href="' +
                                            session['values'][event_mainlink] + f'">' +
                                            session['values'][event_name] + f'</a>' + '\n' + session['values'][
                                                event_type] + ' ' + session['values'][
                                                event_age] + ' ' + '\n' + 'üóì ' + str(
                        session_starttime.strftime('%d.%m')) + ' ' + str(
                        session_starttime.strftime('%H:%M')) + ' - ' + str(
                        session_endtime.strftime('%H:%M')) + '\n' + 'üéü' + ' ' + session['values'][
                                                event_pay_type] + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                                            session['values'][event_org] + f'</a>' + '\n' + '\n')
                    counter_data = await state.get_data()
                    await state.update_data(events_counter=counter_data['events_counter'] + 1)
                    counter_data = await state.get_data()
                if counter_data['events_counter'] == 1:
                    combined_message += ('üîπ')
                    photo_combined += ('üîπ')
                    await state.update_data(events_counter = 0)
            if session['values'][event_category] != '–ú–Ω–æ–≥–æ–¥–Ω–µ–≤–Ω—ã–µ':
                if str(session['values'][event_pay_type]) != '–°–≤–æ–±–æ–¥–Ω—ã–π –≤—Ö–æ–¥':
                    photo_combined += session['values'][event_photo]
                    combined_message += str(
                        '\n' + session['values'][event_desc] + '\n' + '\n' + f'<a href="' +
                        session['values'][event_mainlink] + f'">' +
                        session['values'][event_name] + f'</a>' + '\n' + session['values'][event_type] + ' ' +
                        session['values'][event_age] + ' ' + '\n' + 'üóì ' + str(
                            session_starttime.strftime('%d.%m')) + ' ' + str(
                            session_starttime.strftime('%H:%M')) + ' - ' + str(
                            session_endtime.strftime('%H:%M')) + '\n' + 'üéü' + ' ' + f'<a href="' +
                        session['values'][event_ticketlink] + f'">' +
                        session['values'][event_pay_type] + f'</a>' + str(
                            price) + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' + session['values'][
                            event_org] + f'</a>' + '\n' + '\n')
                    counter_data = await state.get_data()
                    await state.update_data(events_counter=counter_data['events_counter'] + 1)
                    counter_data = await state.get_data()
                else:
                    photo_combined += session['values'][event_photo]
                    combined_message += str(
                        '\n' + session['values'][event_desc] + '\n' + '\n' + f'<a href="' +
                        session['values'][event_mainlink] + f'">' +
                        session['values'][event_name] + f'</a>' + '\n' + session['values'][event_type] + ' ' +
                        session['values'][event_age] + ' ' + '\n' + 'üóì ' + str(
                            session_starttime.strftime('%d.%m')) + ' ' + str(
                            session_starttime.strftime('%H:%M')) + ' - ' + str(
                            session_endtime.strftime('%H:%M')) + '\n' + 'üéü' + ' ' + session['values'][
                            event_pay_type] + '\n' + 'üìç ' + f'<a href ="' + google_url + f'">' +
                        session['values'][event_org] + f'</a>' + '\n' + '\n')
                    counter_data = await state.get_data()
                    await state.update_data(events_counter=counter_data['events_counter'] + 1)
                    counter_data = await state.get_data()
                if counter_data['events_counter'] == 1:
                    combined_message += ('üîπ')
                    photo_combined += ('üîπ')
                    await state.update_data(events_counter=0)
    combined_message += (
            '\n' + '–í—ã–≤–æ–¥ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω.\n\n–í—Å—é –∞—Ñ–∏—à—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –Ω–µ–¥–µ–ª—é –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ "–ò—Å–∫–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.\n' + '\n' + '–•–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–π –±–∞–∑–µ –∏ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≤–æ–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è? - –ø–∏—à–∏—Ç–µ ' + '<a href="'+SUPPORT_LINK+ '">' + '–≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.' + f'</a>')
    events_dictionary = combined_message.split('üîπ')
    photo_dictionary = photo_combined.split('üîπ')
    for i in range(len(photo_dictionary)-1):
        events_dictionary[i] = '\n\n' + events_dictionary[i] + '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ' + str(i + 1) + ' –∏–∑ ' + str(
                len(events_dictionary) - 1) + '\n\n' + '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ ' + '<a href="' + BOT_LINK +'">' + BOT_NAME_SIMPLE + f'</a>'
    await state.update_data(body=events_dictionary)
    await state.update_data(part=0)
    await state.update_data(photos=photo_dictionary)
    rec_data = await state.get_data()
    await bot.delete_message(callback.from_user.id, callback.message.message_id)
    await bot.send_photo(callback.from_user.id, photo=str(rec_data['photos'][0]), caption=(rec_data['body'])[0],
                         parse_mode=ParseMode.HTML, reply_markup=await nav.navMenu_events_prevstop())
    # –û–ö–û–ù–ß–ê–ù–ò–ï –ë–õ–û–ö–ê –°–ë–û–†–ö–ò –ú–ï–†–û–ü–†–ò–Ø–¢–ò–ô –ö–ê–†–¢–û–ß–ö–ê–ú–ò


#############################################################################################--- –û–ö–û–ù–ß–ê–ù–ò–Ø –ë–õ–û–ö–û–í –°–ë–û–†–ö–ò –°–û–û–ë–©–ï–ù–ò–ô

# -- –ë–õ–û–ö –ù–ê–í–ò–ì–ê–¶–ò–ò –ü–†–ò –í–´–í–û–î–ï –ú–ï–†–û–ü–†–ò–Ø–¢–ò–ô - –ö–ê–†–¢–û–ß–ö–ê

@router.callback_query(F.data == 'next_events')
async def show_events_next(callback: CallbackQuery, state: FSMContext):
    rec_data = await state.get_data()
    await state.update_data(part=rec_data['part']+1)
    rec_data = await state.get_data()
    print(f'{str(callback.from_user.username)} –Ω–∞–∂–∞–ª –í–ø–µ—Ä–µ–¥ –∏ –ø–µ—Ä–µ—à–µ–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É {int(rec_data["part"]) + 1}/{len(rec_data["body"])-1}')
    if rec_data['part'] < len(rec_data['body']) - 1:
        await bot.delete_message(callback.from_user.id, callback.message.message_id)
        await bot.send_photo(callback.from_user.id, photo=str((rec_data['photos'])[rec_data['part']]),
                             caption=rec_data['body'][rec_data['part']], parse_mode=ParseMode.HTML,
                             reply_markup=await nav.navMenu_events())
    if rec_data['part'] == len(rec_data['body']) - 1:
        await bot.delete_message(callback.from_user.id, callback.message.message_id)
        await bot.send_photo(callback.from_user.id,
                             photo=paginate_end_photo,
                             caption=rec_data['body'][rec_data['part']], parse_mode=ParseMode.HTML,
                             reply_markup=await nav.navMenu_events_nextstop())

@router.callback_query(F.data == 'prev_events')
async def show_events_prev(callback: CallbackQuery, state: FSMContext):
    rec_data = await state.get_data()
    await state.update_data(part=rec_data['part'] - 1)
    rec_data = await state.get_data()
    print(f'{str(callback.from_user.username)} –Ω–∞–∂–∞–ª –ù–∞–∑–∞–¥ –∏ –ø–µ—Ä–µ—à–µ–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É {int(rec_data["part"]) + 1}/{len(rec_data["body"])-1}')
    if rec_data['part'] > 0:
        await bot.delete_message(callback.from_user.id, callback.message.message_id)
        await bot.send_photo(callback.from_user.id, photo=str((rec_data['photos'])[rec_data['part']]),
                             caption=rec_data['body'][rec_data['part']], parse_mode=ParseMode.HTML,
                             reply_markup=await nav.navMenu_events())
    if rec_data['part'] == 0:
        await bot.delete_message(callback.from_user.id, callback.message.message_id)
        await bot.send_photo(callback.from_user.id, photo=str((rec_data['photos'])[rec_data['part']]),
                             caption=rec_data['body'][rec_data['part']], parse_mode=ParseMode.HTML,
                             reply_markup=await nav.navMenu_events_prevstop())

# -- –ö–ê–¢–ï–ì–û–†–ò–ò –ê–ö–¶–ò–ô –ò –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ô

@router.callback_query(F.data == 'offers')
async def offers_category(callback: CallbackQuery, state: FSMContext):
    print(f'{str(callback.from_user.username)} –Ω–∞–∂–∞–ª –ê–∫—Ü–∏–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è')
    file_log(logtext=f'{str(callback.from_user.username)} –Ω–∞–∂–∞–ª –ê–∫—Ü–∏–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è')
    await state.set_state(user_settings.offers_category)
    await callback.message.delete()
    await callback.message.answer(f'<b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∞–∫—Ü–∏–π –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π\n\nüóÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ :\n\n–í—Å–µ</b> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ —Å–∫–∏–¥–∫–∏, –∞–∫—Ü–∏–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è\n\n'\
            '<b>üì¶ –¢–æ–≤–∞—Ä—ã</b> - –∞–∫—Ü–∏–∏ –Ω–∞ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤\n<b>üí∏ –£—Å–ª—É–≥–∏ </b> - –∞–∫—Ü–∏–∏ –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É—Å–ª—É–≥–∏\n<b>üçî –ï–¥–∞ </b> - –∞–∫—Ü–∏–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É –µ–¥—ã –∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n<b>üî• –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</b> - –∞–∫—Ü–∏–∏ –Ω–∞ –ø–æ—Å–µ—â–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π'\
            , reply_markup=await nav.navMenu_offers_category_choose(), parse_mode=ParseMode.HTML)
#
@router.callback_query(user_settings.offers_category)
async def show_offers(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text('‚è≥–ü–æ–¥–±–∏—Ä–∞–µ–º –∞–∫—Ü–∏–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤–∞—Å...\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ', reply_markup=await nav.mainMenu_inst())
    await state.update_data(offers_category=callback.data[2:])
    userdata = await state.get_data()
    print(f'{str(callback.from_user.username)} –≤—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é {userdata["offers_category"]}')
    file_log(logtext=f'{str(callback.from_user.username)} –≤—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é {userdata["offers_category"]}')
    offers_list_temp = []
    combined_message = ''
    combined_photos = ''
    offer_counter_temp = 0
    now = (datetime.now() + timedelta(hours=3))
    offers_check = fetch.offers_catalogue_fetch(url_get_offers)
    if userdata["offers_category"] == '–í—Å–µ':
        for i in range(len(offers_check)):
            offers_list_temp.append(offers_check[i])
        offers_sorted = sorted(offers_list_temp,
                                key=lambda x: datetime.strptime(x['values'][offer_startdate], "%d.%m.%y %H:%M:%S"))
    else:
        for i in range(len(offers_check)):
            if offers_check[i]["values"][offer_category] == userdata["offers_category"]:
                offers_list_temp.append(offers_check[i])
        offers_sorted = sorted(offers_list_temp,
                                key=lambda x: datetime.strptime(x['values'][offer_startdate], "%d.%m.%y %H:%M:%S"))
    for offer in offers_sorted:
        offer_counter_temp += 1
        offer_start_date = datetime.strptime(offer["values"][offer_startdate], "%d.%m.%y %H:%M:%S")
        offer_end_date = datetime.strptime(offer["values"][offer_enddate], "%d.%m.%y %H:%M:%S")
        id = offer['id']
        photo_link = 'https://quintadb.ru/images/data/bYW7ddI8jfrRlcKYizWQWH/' + str(
            id) + '/' + str(
            offer["values"][offer_photo])
        if offer_end_date.date() >= now.date():
            if offer_start_date.date() >= now.date() and offer_start_date.date()==offer_start_date.date():
                combined_message += str(f'{offer["values"][offer_desc]}\n\nüìÖ –¢–æ–ª—å–∫–æ {offer_end_date.strftime("%d.%m")}\nüìç ' \
                                        + '<a href="' + offer["values"][offer_location_yandex] + '">' + offer["values"][
                                            offer_orgname] + '</a>\n‚ÑπÔ∏è ' \
                                        + '<a href="' + offer["values"][offer_link] + '">–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</a>üîπ')
            elif offer_start_date.date() > now.date():
                combined_message += str(f'{offer["values"][offer_desc]}\n\nüìÖ –° {offer_start_date.strftime("%d.%m")} –ø–æ {offer_end_date.strftime("%d.%m")}\nüìç '\
                    + '<a href="' + offer["values"][offer_location_yandex] + '">' + offer["values"][offer_orgname] + '</a>\n‚ÑπÔ∏è '\
                    + '<a href="' + offer["values"][offer_link] + '">–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</a>üîπ')
            elif offer_start_date.date() <= now.date():
                combined_message += str(f'{offer["values"][offer_desc]}\n\nüìÖ –î–æ {offer_end_date.strftime("%d.%m")}\nüìç ' \
                                    + '<a href="' + offer["values"][offer_location_yandex] + '">' + offer["values"][
                                        offer_orgname] + '</a>\n‚ÑπÔ∏è ' \
                                    + '<a href="' + offer["values"][offer_link] + '">–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</a>üîπ')
        combined_photos += str(f'{photo_link}üîπ')
    combined_message += str('–í—ã–≤–æ–¥ –∞–∫—Ü–∏–π –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω.\n\n–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ "–ê–∫—Ü–∏–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é, –∞ –∞—Ñ–∏—à—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –Ω–µ–¥–µ–ª—é –º–æ–∂–Ω–æ - —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ "–ò—Å–∫–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è".\n\n–•–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–π –±–∞–∑–µ –∏ –¥–æ–±–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∞–∫—Ü–∏–∏? - –ø–∏—à–∏—Ç–µ ' + '<a href="' + SUPPORT_LINK + '">' + '–≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.' + f'</a>')
    offers_list = combined_message.split('üîπ')
    offers_photos_list = combined_photos.split('üîπ')
    for i in range(len(offers_list)-1):
        offers_list[i] = offers_list[i] + '\n\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ' + str(i + 1) + ' –∏–∑ ' + str(
                len(offers_list) - 1) + '\n' + '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ ' + '<a href="' + BOT_LINK +'">' + BOT_NAME_SIMPLE + f'</a>'
    await state.update_data(body=offers_list)
    await state.update_data(part=0)
    await state.update_data(photos=offers_photos_list)
    userdata = await state.get_data()
    print(offer_counter_temp)
    if offer_counter_temp != 0:
        await bot.delete_message(callback.from_user.id, callback.message.message_id)
        await bot.send_photo(callback.from_user.id, photo=str(userdata["photos"][0]), caption=(userdata['body'])[0],
                             parse_mode=ParseMode.HTML, reply_markup=await nav.navMenu_events_prevstop())
    else:
        await bot.send_photo(callback.from_user.id,
                             photo=paginate_end_photo,
                             caption=('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±–∞–∑–µ –Ω–µ—Ç –∞–∫—Ü–∏–π –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.\n\n–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ "–ê–∫—Ü–∏–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é, –∞ –∞—Ñ–∏—à—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –Ω–∞ –Ω–µ–¥–µ–ª—é –º–æ–∂–Ω–æ - —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ "–ò—Å–∫–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è".\n\n–•–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–π –±–∞–∑–µ –∏ –¥–æ–±–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∞–∫—Ü–∏–∏? - –ø–∏—à–∏—Ç–µ ' + '<a href="' + SUPPORT_LINK + '">' + '–≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.' + f'</a>'), parse_mode=ParseMode.HTML,
                             reply_markup=await nav.navMenu_events_catalogue_none())


@router.callback_query(F.data == 'next_events')
async def show_events_offers(callback: CallbackQuery, state: FSMContext):
    userdata = await state.get_data()
    await state.update_data(part=userdata['part'] + 1)
    userdata = await state.get_data()
    print(
        f'{str(callback.from_user.username)} –Ω–∞–∂–∞–ª –í–ø–µ—Ä–µ–¥ –∏ –ø–µ—Ä–µ—à–µ–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É {int(userdata["part"]) + 1}/{len(userdata["body"]) - 1}')
    if userdata['part'] < len(userdata['body']) - 1:
        await bot.delete_message(callback.from_user.id, callback.message.message_id)
        await bot.send_photo(callback.from_user.id, photo=str((userdata['photos'])[userdata['part']]),
                                 caption=userdata['body'][userdata['part']], parse_mode=ParseMode.HTML,
                                 reply_markup=await nav.navMenu_events())
    if userdata['part'] == len(userdata['body']) - 1:
        await bot.delete_message(callback.from_user.id, callback.message.message_id)
        await bot.send_photo(callback.from_user.id,
                                 photo=paginate_end_photo,
                                 caption=userdata['body'][userdata['part']], parse_mode=ParseMode.HTML,
                                 reply_markup=await nav.navMenu_events_nextstop())

@router.callback_query(F.data == 'prev_events')
async def show_prev_offers(callback: CallbackQuery, state: FSMContext):
    userdata = await state.get_data()
    await state.update_data(part=userdata['part'] - 1)
    userdata = await state.get_data()
    print(
        f'{str(callback.from_user.username)} –Ω–∞–∂–∞–ª –ù–∞–∑–∞–¥ –∏ –ø–µ—Ä–µ—à–µ–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É {int(userdata["part"]) + 1}/{len(userdata["body"]) - 1}')
    if userdata['part'] > 0:
        await bot.delete_message(callback.from_user.id, callback.message.message_id)
        await bot.send_photo(callback.from_user.id, photo=str((userdata['photos'])[userdata['part']]),
                                 caption=userdata['body'][userdata['part']], parse_mode=ParseMode.HTML,
                                 reply_markup=await nav.navMenu_events())
    if userdata['part'] == 0:
        await bot.delete_message(callback.from_user.id, callback.message.message_id)
        await bot.send_photo(callback.from_user.id, photo=str((userdata['photos'])[userdata['part']]),
                                 caption=userdata['body'][userdata['part']], parse_mode=ParseMode.HTML,
                                 reply_markup=await nav.navMenu_events_prevstop())


    '''
    offers_list = []
    combined_message = ''
    photo_combined = ''
    offers_check = fetch.offers_catalogue_fetch(url_get_offers)
    for i in range(len(offers_check)):
        if offers_check[i]['values'][mod_check] != '–ù–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ':
            offers_list.append(offers_check[i])
    offers_sorted = sorted(offers_list,
                           key=lambda x: datetime.strptime(x['values'][offers_end_time], "%d.%m.%y %H:%M:%S"))
'''

# -- –ë–õ–û–ö –í–´–í–û–î –ò–ù–°–¢–†–£–ö–¶–ò–ò –ù–ê –≠–ö–†–ê–ù

@router.callback_query(F.data=="show_help")
async def showhelp(callback: CallbackQuery):
    print(f'{str(callback.from_user.username)} –Ω–∞–∂–∞–ª –ü–æ–º–æ—â—å')
    await callback.message.delete()
    await callback.message.answer('–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–∏—Å—É.' + '\n' + '\n' + '<a href="' + BOT_LINK +'">' + BOT_NAME + '</a>' + ' - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≥–æ—Ä–æ–¥–∞ ' + CITY_NAME + ' –Ω–∞ –±–ª–∏–∂–∞–π—à—É—é'
                              + ' –Ω–µ–¥–µ–ª—é.' + '\n' + '\n'+ f'<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:</b>' + '\n' + '\n' + '1Ô∏è‚É£  –ü–µ—Ä–µ–π—Ç–∏ –≤ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"' + '\n' + '2Ô∏è‚É£  –ù–∞–∂–∞—Ç—å "–ò—Å–∫–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"' + '\n' + '3Ô∏è‚É£  –í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é' + '\n4Ô∏è‚É£  –í—ã–±—Ä–∞—Ç—å –¥–µ–Ω—å\n'
                                 + '\n' + 'üî∏–ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª:' + '<a href="' + CHANNEL_LINK + '">' + CHANNEL_NAME + '</a>' + '\n\n–°–≤–µ–¥–µ–Ω–∏—è –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –≤–∑—è—Ç—ã —Å —Å–∞–π—Ç–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤ –∏–ª–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –∏–º–∏.\n\n–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –±–æ—Ç–∞ –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª, –∞ —Ç–∞–∫–∂–µ –∑–∞ –¥–µ–π—Å—Ç–≤–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞ –∏/–∏–ª–∏ –∏–Ω—ã—Ö –ª–∏—Ü, –¥–µ–π—Å—Ç–≤—É—é—â–∏—Ö –æ—Ç –µ–≥–æ –∏–º–µ–Ω–∏ –∏ –ø–æ –µ–≥–æ –ø–æ—Ä—É—á–µ–Ω–∏—é, –ª–∏–±–æ –æ—Ç —Å–≤–æ–µ–≥–æ –∏–º–µ–Ω–∏, –Ω–æ –ø–æ –ø–æ—Ä—É—á–µ–Ω–∏—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞, –≤ —Ç–æ–º —á–∏—Å–ª–µ –≤ —Å–≤—è–∑–∏ —Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π —Ç–∞–∫–∏–º–∏ –ª–∏—Ü–∞–º–∏ –±–∏–ª–µ—Ç–æ–≤, –∞ —Ä–∞–≤–Ω–æ –∑–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é, –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. ' + '\n\n–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –∏–ª–∏ —É –≤–∞—Å –≤–æ–ø—Ä–æ—Å –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤—É? - '+ '<a href="'+SUPPORT_LINK+'">' + '–ø–∏—à–∏—Ç–µ —Å—é–¥–∞.' + '</a>', parse_mode='html', disable_web_page_preview = True, reply_markup=await nav.mainMenu_inst())

# -- –í–´–í–û–î –°–¢–ê–¢–ò–°–¢–ò–ö–ò

@router.callback_query(F.data=="stats")
async def stats(callback: CallbackQuery, state: FSMContext):
    print(f'{str(callback.from_user.username)} –Ω–∞–∂–∞–ª –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    global mon, tue, wed, thu, fri, sat, sun
    total = 0
    mon = 0
    tue = 0
    wed = 0
    thu = 0
    fri = 0
    sat = 0
    sun = 0
    stats = fetch.events_catalogue_fetch(url_get_events)
    for session in stats:
        if session['values'][mod_check] != '–ù–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ':
            total = total + 1
            session_start = datetime.strptime(session['values'][event_start_time], "%d.%m.%y %H:%M:%S")
            weekday_strp_temp = session_start
            weekday_strf_temp = datetime.strftime(weekday_strp_temp, "%a.")
            if str(weekday_strf_temp) == 'Mon.':
                mon = mon + 1
            if str(weekday_strf_temp) == 'Tue.':
                tue = tue + 1
            if str(weekday_strf_temp) == 'Wed.':
                wed = wed + 1
            if str(weekday_strf_temp) == 'Thu.':
                thu = thu + 1
            if str(weekday_strf_temp) == 'Fri.':
                fri = fri + 1
            if str(weekday_strf_temp) == 'Sat.':
                sat = sat + 1
            if str(weekday_strf_temp) == 'Sun.':
                sun = sun + 1
    await state.update_data(stats_counter = {'tot': total, 'mon': mon, 'tue': tue, 'wed': wed, 'thu': thu, 'fri': fri, 'sat': sat, 'sun': sun})
    stats_data = await state.get_data()
    await callback.message.delete()
    await callback.message.answer(f'<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –≤ –Ω–∞—à–µ–π –±–∞–∑–µ:</b>\n\n–í—Å–µ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π: {stats_data["stats_counter"]["tot"]}\n\n–ò–∑ –Ω–∏—Ö:\n–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: {stats_data["stats_counter"]["mon"]}\n–í—Ç–æ—Ä–Ω–∏–∫: {stats_data["stats_counter"]["tue"]}\n–°—Ä–µ–¥–∞: {stats_data["stats_counter"]["wed"]}\n–ß–µ—Ç–≤–µ—Ä–≥: {stats_data["stats_counter"]["thu"]}\n–ü—è—Ç–Ω–∏—Ü–∞: {stats_data["stats_counter"]["fri"]}\n–°—É–±–±–æ—Ç–∞: {stats_data["stats_counter"]["sat"]}\n–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: {stats_data["stats_counter"]["sun"]}\n\n–ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª —Å –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º –≤ '+CITY_NAME_pr_padezh+f':' + '<a href="' + CHANNEL_LINK + '">' + CHANNEL_NAME + '</a>' +'\n\n–î–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"'
                                     , parse_mode=ParseMode.HTML, disable_web_page_preview = True, reply_markup=await nav.mainMenu_inst())



# –ü–û–õ–£–ß–ï–ù–ò–ï –û–ë–ù–û–í–õ–ï–ù–ò–ô
async def get_updates():
    dp.include_router(router)
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)
asyncio.run(get_updates())